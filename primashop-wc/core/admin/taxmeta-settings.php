<?php
/**
 * Handles taxonomy metaboxes
 *
 * WARNING: This file is part of the core PrimaThemes framework.
 * DO NOT edit this file under any circumstances. 
 *
 * @category   PrimaThemes
 * @package    Framework
 * @subpackage Admin
 * @author     PrimaThemes
 * @link       http://www.primathemes.com
 */

if ( ! defined( 'ABSPATH' ) ) exit; // Exit if accessed directly

/**
 * Create taxonomy metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
add_action( 'admin_init', 'prima_metabox_tax_create' ); 
function prima_metabox_tax_create() { 
	foreach (get_taxonomies() as $taxonomy) { 
		if ( prima_metabox_tax_content_args( $taxonomy ) )
			add_action($taxonomy . '_edit_form', 'prima_metabox_tax_content', 10, 2); 
		if ( prima_metabox_tax_header_args( $taxonomy ) )
			add_action($taxonomy . '_edit_form', 'prima_metabox_tax_header', 10, 2); 
		if ( prima_metabox_tax_footer_args( $taxonomy ) )
			add_action($taxonomy . '_edit_form', 'prima_metabox_tax_footer', 10, 2); 
	} 
}

/**
 * Enqueue script and style for taxonomy metaboxes
 *
 * @since PrimaThemes 2.1
 */ 
add_action( 'admin_menu', 'prima_metabox_tax_enqueue' );
function prima_metabox_tax_enqueue() {
	add_action( "load-edit-tags.php", 'prima_metabox_post_script' );
	add_action( "load-edit-tags.php", 'prima_metabox_post_style' );
}

/**
 * Define taxonomy content metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
function prima_metabox_tax_content_args( $taxonomy = '' ) {
	$meta = array();
	if ( empty( $taxonomy ) ) $taxonomy = 'category';
	$meta = apply_filters( "prima_metabox_alltax_content_args", $meta, $taxonomy );
	return apply_filters( "prima_metabox_{$taxonomy}_content_args", $meta, $taxonomy );
}

/**
 * Output taxonomy content metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
function prima_metabox_tax_content( $term, $taxonomy ) {
	$meta = prima_metabox_tax_content_args( $taxonomy );
	if ( !$meta ) return;
	echo '<p class="submit"><input type="submit" value="'.__('Update', 'primathemes').'" class="button-primary" id="submit" name="submit"></p>';
	echo '<div id="prima-metabox-tax-content">';
	echo '<h3>'.__( 'Content Settings', 'primathemes' ).'</h3>';
	echo prima_metabox_generator( $meta, 'taxonomy', $term->term_id, $taxonomy );
	echo '</div>';
}

/**
 * Define taxonomy header metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
function prima_metabox_tax_header_args( $taxonomy = '' ) {
	$meta = array();
	if ( empty( $taxonomy ) ) $taxonomy = 'category';
	$meta = apply_filters( "prima_metabox_alltax_header_args", $meta, $taxonomy );
	return apply_filters( "prima_metabox_{$taxonomy}_header_args", $meta, $taxonomy );
}

/**
 * Output taxonomy header metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
function prima_metabox_tax_header( $term, $taxonomy ) {
	$meta = prima_metabox_tax_header_args( $taxonomy );
	if ( !$meta ) return;
	echo '<p class="submit"><input type="submit" value="'.__('Update', 'primathemes').'" class="button-primary" id="submit" name="submit"></p>';
	echo '<div id="prima-metabox-tax-header">';
	echo '<h3>'.__( 'Header Settings', 'primathemes' ).'</h3>';
	echo prima_metabox_generator( $meta, 'taxonomy', $term->term_id, $taxonomy );
	echo '</div>';
}

/**
 * Define taxonomy footer metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
function prima_metabox_tax_footer_args( $taxonomy = '' ) {
	$meta = array();
	if ( empty( $taxonomy ) ) $taxonomy = 'category';
	$meta = apply_filters( "prima_metabox_alltax_footer_args", $meta, $taxonomy );
	return apply_filters( "prima_metabox_{$taxonomy}_footer_args", $meta, $taxonomy );
}

/**
 * Output taxonomy footer metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
function prima_metabox_tax_footer( $term, $taxonomy ) {
	$meta = prima_metabox_tax_footer_args( $taxonomy );
	if ( !$meta ) return;
	echo '<p class="submit"><input type="submit" value="'.__('Update', 'primathemes').'" class="button-primary" id="submit" name="submit"></p>';
	echo '<div id="prima-metabox-tax-footer">';
	echo '<h3>'.__( 'Footer Settings', 'primathemes' ).'</h3>';
	echo prima_metabox_generator( $meta, 'taxonomy', $term->term_id, $taxonomy );
	echo '</div>';
}

/**
 * Save taxonomy metaboxes.
 *
 * @since PrimaThemes 2.1
 */ 
add_action('edit_term', 'prima_metabox_tax_save', 10, 3);
function prima_metabox_tax_save( $term_id, $tt_id, $taxonomy ) {
	if ( defined( 'DOING_AJAX' ) && DOING_AJAX ) return;
	$tax = get_taxonomy( $taxonomy );
	if ( !$tax->show_ui && isset( $tax->taxonomy ) && strpos($tax->taxonomy, 'pa_') === 0 ) return;
	$tax_meta = (array) get_option( 'prima_taxonomy_meta' );
	$metadata = array();
	$metadata = array_merge( $metadata, prima_metabox_tax_content_args( $taxonomy ) );
	$metadata = array_merge( $metadata, prima_metabox_tax_header_args( $taxonomy ) );
	$metadata = array_merge( $metadata, prima_metabox_tax_footer_args( $taxonomy ) );
	if ( $metadata ) {
		foreach ( $metadata as $meta ) {
			if ( isset( $_POST[ $meta['id'] ] ) && $_POST[ $meta['id'] ] ) {
				if ( $meta['type'] == 'textarea' || $meta['type'] == 'wysiwyg' ) {
					$new_meta_value = $_POST[ $meta['id'] ];
				}
				else {
					$new_meta_value = sanitize_text_field( $_POST[ $meta['id'] ] );
				}
				$tax_meta[$taxonomy][$term_id][$meta['id']] = $new_meta_value;
			}
			else {
				unset( $tax_meta[$taxonomy][$term_id][$meta['id']] );
			}
		}
	}
	update_option('prima_taxonomy_meta', (array) $tax_meta);
}

/**
 * Remove taxonomy meta when the taxonomy is deleted.
 *
 * @since PrimaThemes 2.1
 */ 
add_action('delete_term', 'prima_metabox_tax_delete', 10, 3);
function prima_metabox_tax_delete( $term_id, $tt_id, $taxonomy ) {
	$tax = get_taxonomy( $taxonomy );
	if ( !$tax->show_ui && isset( $tax->taxonomy ) && strpos($tax->taxonomy, 'pa_') === 0 ) return;
	$tax_meta = (array) get_option( 'prima_taxonomy_meta' );
	unset( $tax_meta[$taxonomy][$term_id] );
	update_option('prima_taxonomy_meta', (array) $tax_meta);
}